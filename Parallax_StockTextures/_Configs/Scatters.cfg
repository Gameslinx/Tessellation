@Kopernicus:FOR[ParallaxStock]
{
	@Body[Kerbin]
	{
		removePQSMods = TextureAtlas
		%Properties
		{
			biomeMap = Parallax_StockTextures/_Scatters/Textures/Kerbin/PluginData/biomeMap.dds
			%Biomes
			{
				Biome
				{
					name = Water // The name of this biome.
					displayName = #autoLOC_6002090 // Water // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.215686277,0.384313732,0.670588255,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Grasslands // The name of this biome.
					displayName = #autoLOC_6002034 // Grasslands // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.513725519,0.737254918,0.180392161,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Highlands // The name of this biome.
					displayName = #autoLOC_6002038 // Highlands // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.36470589,0.521568656,0.164705887,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Shores // The name of this biome.
					displayName = #autoLOC_6002074 // Shores // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.980392158,0.949019611,0.717647076,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Mountains // The name of this biome.
					displayName = #autoLOC_6002052 // Mountains // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.654901981,0.654901981,0.654901981,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Deserts // The name of this biome.
					displayName = #autoLOC_6002019 // Deserts // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.917647064,0.749019623,0.435294122,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Badlands // The name of this biome.
					displayName = #autoLOC_6002008 // Badlands // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.592156887,0.309803933,0.137254909,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Tundra // The name of this biome.
					displayName = #autoLOC_6002086 // Tundra // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.78039217,0.56078434,0.874509811,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Ice Caps // The name of this biome.
					displayName = #autoLOC_6002040 // Ice Caps // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 1,1,1,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Northern Ice Shelf // The name of this biome.
					displayName = #autoLOC_6002059 // Northern Ice Shelf // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.894117653,0.992156863,1,1 // The color of the biome on the biome map.
				}
				Biome
				{
					name = Southern Ice Shelf // The name of this biome.
					displayName = #autoLOC_6002082 // Southern Ice Shelf // The displayed name of the biome. Can be a localization tag.
					value = 0 // A value that gets multiplied with every amount of science that is returned in the biome.
					color = 0.847058833,0.847058833,0.847058833,1 // The color of the biome on the biome map.
				}

				//CUSTOM BIOMES

				Biome	//Ice bergs spawn here
				{
					name = The Cold Ocean
					displayName = #Parallax_Biomes_TheColdOcean_displayname // The Cold Ocean
					value = 1
					color = #254C4F
				}
				Biome	//Ice bergs can spawn in cold shores biomes, as they extend off the land like shores
				{
					name = Cold Shores
					displayName = #Parallax_Biomes_ColdShores_displayname // Cold Shores
					value = 1
					color = #33204C
				}
			}
		}

		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute	//Block maps blocks ALL persistent, verticalstack and fixedaltitude scatters but does NOT block nonpersistent scatters (grass, etc). This stops scatters spawning around launch sites
				{
					order = 999998
					blockMap = Parallax_StockTextures/_Scatters/Textures/Kerbin/blockmap.png
				}
			}
		}
	}
    @Body[Mun]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
    @Body[Eve]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Duna]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Minmus]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Laythe]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Ike]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Moho]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Pol]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Eeloo]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Gilly]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Dres]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Vall]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Tylo]
	{
		%PQS
		{
			%maxLevel = 10
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
	@Body[Bop]
	{
		%PQS
		{
			%Mods
			{
				ParallaxScatter
				{
					order = 999999
				}
				ScatterDistribute
				{
					order = 999998
				}
			}
		}
	}
}
